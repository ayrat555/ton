defmodule Ton.BitBuilderTest do
  use ExUnit.Case

  alias Ton.BitBuilder
  alias Ton.NewBitstring.CanonicalString

  describe "write_uint/3" do
    test "serializez uints" do
      tests = [
        [10_290, 29, "00014194_"],
        [41_732, 27, "0014609_"],
        [62_757, 22, "03D496_"],
        [44_525, 16, "ADED"],
        [26_925, 30, "0001A4B6_"],
        [52_948, 27, "0019DA9_"],
        [12_362, 20, "0304A"],
        [31_989, 16, "7CF5"],
        [8_503, 21, "0109BC_"],
        [54_308, 17, "6A124_"],
        [61_700, 25, "0078824_"],
        [63_112, 20, "0F688"],
        [27_062, 29, "00034DB4_"],
        [37_994, 30, "000251AA_"],
        [47_973, 27, "00176CB_"],
        [18_996, 25, "00251A4_"],
        [34_043, 21, "0427DC_"],
        [8_234, 18, "080AA_"],
        [16_218, 26, "000FD6A_"],
        [40_697, 25, "004F7CC_"],
        [43_740, 27, "00155B9_"],
        [35_773, 31, "0001177B_"],
        [32_916, 18, "20252_"],
        [1_779, 24, "0006F3"],
        [35_968, 17, "46404_"],
        [15_503, 23, "00791F_"],
        [25_860, 21, "032824_"],
        [20_651, 29, "0002855C_"],
        [14_369, 16, "3821"],
        [28_242, 24, "006E52"],
        [28_446, 18, "1BC7A_"],
        [48_685, 16, "BE2D"],
        [54_822, 18, "3589A_"],
        [50_042, 22, "030DEA_"],
        [11_024, 30, "0000AC42_"],
        [44_958, 26, "002BE7A_"],
        [20_297, 27, "0009E93_"],
        [24_757, 16, "60B5"],
        [36_043, 29, "0004665C_"],
        [24_210, 16, "5E92"],
        [49_621, 29, "00060EAC_"],
        [63_571, 17, "7C29C_"],
        [16_047, 24, "003EAF"],
        [61_384, 27, "001DF91_"],
        [57_607, 25, "007083C_"],
        [32_945, 30, "000202C6_"],
        [31_215, 29, "0003CF7C_"],
        [3_088, 21, "006084_"],
        [45_519, 24, "00B1CF"],
        [53_126, 26, "0033E1A_"]
      ]

      Enum.each(tests, fn [number, bits, result] ->
        bitstring =
          BitBuilder.new()
          |> BitBuilder.write_uint(number, bits)
          |> BitBuilder.build()

        assert result == CanonicalString.to_string(bitstring)
      end)
    end

    test "serializes ints" do
      tests = [
        [-44_028, 22, "FD5012_"],
        [-1_613, 16, "F9B3"],
        [-3_640, 23, "FFE391_"],
        [45_943, 22, "02CDDE_"],
        [-25_519, 22, "FE7146_"],
        [-31_775, 31, "FFFF07C3_"],
        [3_609, 29, "000070CC_"],
        [-38_203, 20, "F6AC5"],
        [59_963, 28, "000EA3B"],
        [-22_104, 21, "FD4D44_"],
        [1_305, 21, "0028CC_"],
        [-40_704, 30, "FFFD8402_"],
        [39_319, 20, "09997"],
        [-39_280, 27, "FFECD21_"],
        [48_805, 21, "05F52C_"],
        [-47_386, 21, "FA3734_"],
        [-24_541, 22, "FE808E_"],
        [-11_924, 30, "FFFF45B2_"],
        [16_173, 22, "00FCB6_"],
        [25_833, 23, "00C9D3_"],
        [27_830, 22, "01B2DA_"],
        [50_784, 31, "00018CC1_"],
        [-41_292, 22, "FD7AD2_"],
        [-8_437, 20, "FDF0B"],
        [-42_394, 19, "EB4CD_"],
        [14_663, 26, "000E51E_"],
        [-52_314, 25, "FF99D34_"],
        [22_649, 31, "0000B0F3_"],
        [-60_755, 19, "E255B_"],
        [-28_966, 17, "C76D4_"],
        [44_151, 20, "0AC77"],
        [22_112, 26, "0015982_"],
        [25_524, 19, "0C769_"],
        [55_597, 23, "01B25B_"],
        [4_434, 28, "0001152"],
        [28_364, 29, "00037664_"],
        [-5_431, 25, "FFF564C_"],
        [35_945, 17, "4634C_"],
        [49_508, 19, "182C9_"],
        [-54_454, 30, "FFFCAD2A_"],
        [-62_846, 22, "FC2A0A_"],
        [-11_725, 28, "FFFD233"],
        [-25_980, 30, "FFFE6A12_"],
        [56_226, 30, "00036E8A_"],
        [64_224, 27, "001F5C1_"],
        [-52_385, 29, "FFF99AFC_"],
        [33_146, 24, "00817A"],
        [-4_383, 27, "FFFDDC3_"],
        [4_617, 23, "002413_"],
        [-20_390, 21, "FD82D4_"]
      ]

      Enum.each(tests, fn [number, bits, result] ->
        bitstring =
          BitBuilder.new()
          |> BitBuilder.write_int(number, bits)
          |> BitBuilder.build()

        assert result == CanonicalString.to_string(bitstring)
      end)
    end

    test "serializes coins" do
      tests = [
        ["187657898555727", "6AAAC8261F94F"],
        ["220186135208421", "6C842145FA1E5"],
        ["38303065322130", "622D6209A3292"],
        ["99570315572129", "65A8F054A33A1"],
        ["14785390105803", "60D727DECD4CB"],
        ["244446854605494", "6DE52B7EF6AB6"],
        ["130189848588337", "676682FADB031"],
        ["82548661242881", "64B13DBA14C01"],
        ["248198532456807", "6E1BC395C6167"],
        ["192570661887521", "6AF2459E55E21"],
        ["72100014883174", "6419317C68166"],
        ["216482443674661", "6C4E3BF27C425"],
        ["11259492167296", "60A3D8E07EE80"],
        ["89891460221935", "651C17C8E0BEF"],
        ["267747267722164", "6F383C4C83BB4"],
        ["33545710125130", "61E827822C04A"],
        ["48663481749259", "62C42598B0F0B"],
        ["4122277458487", "603BFCAE23237"],
        ["112985911164954", "666C29519801A"],
        ["262936671139040", "6EF23B6E1B4E0"],
        ["137598454214999", "67D2522FC3157"],
        ["164191836706277", "69554E41A15E5"],
        ["225097218341260", "6CCB987BD398C"],
        ["253225616389304", "6E64EAEE9B4B8"],
        ["89031277771089", "650F935AF7951"],
        ["95175307882302", "6568FBA6AEF3E"],
        ["129805848629999", "6760EC77F52EF"],
        ["144714620593360", "6839DFF8DE4D0"],
        ["245178977211193", "6DEFD2DD7D339"],
        ["85630758278876", "64DE176EDD6DC"],
        ["12826827848685", "60BAA7A847BED"],
        ["112520990974580", "6665655B26274"],
        ["279110697598724", "6FDD985FBBF04"],
        ["213631116095525", "6C24BDEC9B025"],
        ["151538088541111", "689D2B5EFFBB7"],
        ["248258622846989", "6E1CA3706F80D"],
        ["124738812119884", "6717304960B4C"],
        ["20802268076562", "612EB67CC9A12"],
        ["227545530657711", "6CEF392866BAF"],
        ["120231499052120", "66D5993CAB458"],
        ["149349897829611", "687D53B9B7CEB"],
        ["189858289788838", "6ACACD3EBA7A6"],
        ["123762285255173", "6708FA70C9A05"],
        ["70958099290717", "64089384D5A5D"],
        ["124643854909101", "6715CE8B1FEAD"],
        ["7092186021168", "60673473A7D30"],
        ["52349283250349", "62F9C846EB0AD"],
        ["151939404432691", "68A30263A8533"],
        ["31720663732116", "61CD98AE4CF94"],
        ["132368134922315", "678635BA9604B"]
      ]

      Enum.each(tests, fn [str_number, result] ->
        number = String.to_integer(str_number)

        bitstring =
          BitBuilder.new()
          |> BitBuilder.write_coins(number)
          |> BitBuilder.build()

        assert result == CanonicalString.to_string(bitstring)
      end)
    end
  end
end
